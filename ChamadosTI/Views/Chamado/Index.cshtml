@model IEnumerable<ChamadosTI.Models.Chamado>


@{
    ViewBag.Title = "Index";
}

<div class="w3-container w3-display-container container">

    <div class="w3-container  ">
        <h2 class="w3-display-topmiddle">Chamados</h2>
        <br></br>
        <br></br>
        <h6 class="w3-button  w3-hover-gray w3-padding w3-border">@Html.ActionLink("Criar chamado", "Create")</h6>

        <input class="w3-input w3-border w3-padding" type="text" placeholder="Achar ticket" id="myInput" onkeyup="procurarTicket()">
        <br>
        


   
             
        
        @**@<table class="w3-table-all w3-centered" id="myTable">
            <tr class="b-blue-light">
                <th>
                    Ticket
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Descricao)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Pa)

                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TipoChamado.Descricao)

                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Requisitante)

                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Responsavel)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>Açao</th>
            </tr>
            <tr>
                @foreach (var item in Model)
                {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.IdChamado)


                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Descricao)



                    </td>
                    <td>

                        @Html.DisplayFor(modelItem => item.Pa)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TipoChamado.Descricao)


                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Requisitante.Nome)

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Responsavel.Nome)

                    </td>
                    <td>@Html.DisplayFor(modelItem => item.Status.Descricao)</td>
                    <td>@Html.ActionLink("Atualizar", "Edit", new { id = item.IdChamado }, new { @class = "w3-button w3-round-large w3-small b-orange c-white" }) </td>
                </tr>
                }
            </table>
        <br />

        <div id="chart_div">

            <table class="w3-border table " id="tabela">
                @foreach (var item in @ViewBag.AbertoFechado)
            {
                    <tr class="chamado ">

                        <td>
                            @Html.LabelForModel(((ChamadosTI.Models.Charts)item).Descricao)
                        </td>
                        <td>
                            @Html.LabelForModel(((ChamadosTI.Models.Charts)item).Quantidade)

                        </td>

                    </tr>
                }
            </table>
        </div>

    
</div></div>

    <script>
    function procurarTicket() {
      var input, filter, table, tr, td, i;
      input = document.getElementById("myInput");
      filter = input.value.toUpperCase();
      table = document.getElementById("myTable");
      tr = table.getElementsByTagName("tr");
      for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td")[0];
        if (td) {
          if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
            tr[i].style.display = "";
          } else {
            tr[i].style.display = "none";
          }
        }
      }
    }
    </script>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">

        // Load the Visualization API and the corechart package.
        google.charts.load('current', { 'packages': ['corechart'] });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.
        function drawChart() {

            var linhas = document.getElementsByClassName('chamado');
            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Topping');
            data.addColumn('number', 'Slices');

            for (var i = 0; i < linhas.length; i++) {

                var descricao = linhas[i].cells[0].outerText;
                var qtd = linhas[i].cells[1].outerText;

                data.addRows([
                  [descricao, parseInt(qtd)]
                ]);
            }
            // Set chart options
            var options = {
                'title': 'Chamados',
                'width': 400,
                'height': 200,
                
            };

            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
            chart.draw(data, options);

        }
</script>
