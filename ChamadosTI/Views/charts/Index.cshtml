@model IEnumerable<ChamadosTI.Models.Charts>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">

        // Load the Visualization API and the corechart package.
        google.charts.load('current', { 'packages': ['corechart'] });

        // Set a callback to run when the Google Visualization API is loaded.
        google.charts.setOnLoadCallback(drawChart);

        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.
        function drawChart() {
           
            var linhas = document.getElementsByClassName('chamado');
            var data = new google.visualization.DataTable();
            data.addColumn('string', 'Topping');
            data.addColumn('number', 'Slices');

            for (var i = 0; i < linhas.length; i++) {
                
                var descricao = linhas[i].cells[0].outerText;
                var qtd = linhas[i].cells[1].outerText;

                data.addRows([
                  [descricao, parseInt(qtd)]
                ]);
            }           
            // Set chart options
            var options = {
                'title': 'Chamados',
                'width': 400,
                'height': 300
            };

            // Instantiate and draw our chart, passing in some options.
            var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
            chart.draw(data, options);
            
        }
    </script>
</head>
<body>
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table" id="tabela">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Descricao )
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantidade)
            </th>            
        </tr>

        @foreach (var item in Model)
        {
            <tr class="chamado">
                <td>
                    @Html.DisplayFor(modelItem => item.Descricao)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantidade)
                </td>
            </tr>
        }

    </table>
    <div id="chart_div"></div>
</body>
</html>
